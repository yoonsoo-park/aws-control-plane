name: Website Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'src/web/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/web/package-lock.json
      
      - name: Install dependencies
        working-directory: src/web
        run: npm install
      
      - name: Build Next.js app
        working-directory: src/web
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Upload to S3
        working-directory: src/web
        run: |
          if [ -d ".next/static" ]; then
            aws s3 sync .next/static s3://${{ secrets.WEBSITE_BUCKET_NAME }}/_next/static/
          fi
          if [ -d ".next/server" ]; then
            aws s3 sync .next/server s3://${{ secrets.WEBSITE_BUCKET_NAME }}/_next/server/
          fi
          if [ -f ".next/standalone/server.js" ]; then
            aws s3 cp .next/standalone/server.js s3://${{ secrets.WEBSITE_BUCKET_NAME }}/server.js
          fi
          if [ -d "public" ]; then
            aws s3 sync public s3://${{ secrets.WEBSITE_BUCKET_NAME }}/
          fi
      
      # TODO: policy to allow public access
      # aws s3api put-bucket-policy --bucket ${{ secrets.WEBSITE_BUCKET_NAME }} --policy '{
      #   "Version": "2012-10-17",
      #   "Statement": [
      #     {
      #       "Sid": "PublicReadGetObject",
      #       "Effect": "Allow",
      #       "Principal": "*",
      #       "Action": "s3:GetObject",
      #       "Resource": "arn:aws:s3:::'${{ secrets.WEBSITE_BUCKET_NAME }}'/*"
      #     }
      #   ]
      # }'
      - name: Configure S3 website
        run: |
          aws s3 website s3://${{ secrets.WEBSITE_BUCKET_NAME }} --index-document index.html --error-document index.html
      
      # - name: Output website URL
      #   run: |
      #     echo "Website URL: http://${{ secrets.WEBSITE_BUCKET_NAME }}.s3-website-us-east-1.amazonaws.com" 